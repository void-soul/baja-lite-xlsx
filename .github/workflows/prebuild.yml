name: Prebuild Native Module

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      matrix:
        node: [16, 18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      
      - name: Install vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          cd C:\vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg install xlnt:x64-windows
        shell: powershell
      
      - name: Set environment variables
        run: |
          echo "VCPKG_ROOT=C:\vcpkg" >> $env:GITHUB_ENV
        shell: powershell
      
      - name: Install dependencies
        run: npm install --ignore-scripts
      
      - name: Build
        run: npm run build
      
      - name: Create prebuild
        run: npx prebuild --runtime napi --target 8
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds-windows-node${{ matrix.node }}
          path: prebuilds/

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git libz-dev
      
      - name: Install vcpkg and xlnt
        run: |
          cd /opt
          sudo git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          sudo ./bootstrap-vcpkg.sh
          sudo ./vcpkg install xlnt
      
      - name: Set environment variables
        run: echo "VCPKG_ROOT=/opt/vcpkg" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: npm install --ignore-scripts
      
      - name: Build
        run: npm run build
      
      - name: Create prebuild
        run: npx prebuild --runtime napi --target 8
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds-linux-node${{ matrix.node }}
          path: prebuilds/

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        node: [16, 18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      
      - name: Install system dependencies
        run: brew install cmake
      
      - name: Install vcpkg and xlnt
        run: |
          cd $HOME
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          ./vcpkg install xlnt
      
      - name: Set environment variables
        run: echo "VCPKG_ROOT=$HOME/vcpkg" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: npm install --ignore-scripts
      
      - name: Build
        run: npm run build
      
      - name: Create prebuild
        run: npx prebuild --runtime napi --target 8
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds-macos-node${{ matrix.node }}
          path: prebuilds/

  release:
    name: Create Release
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: prebuilds-all
      
      - name: Merge prebuilds
        run: |
          mkdir -p prebuilds
          cp prebuilds-all/*/* prebuilds/
          ls -la prebuilds/
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: prebuilds/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

